"use strict";(self.webpackChunktekdi_docs=self.webpackChunktekdi_docs||[]).push([[538],{8004:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>a,contentTitle:()=>r,default:()=>f,frontMatter:()=>s,metadata:()=>l,toc:()=>d});var i=t(4848),o=t(8453);const s={sidebar_position:2},r="Ruff",l={id:"tools/python/ruff",title:"Ruff",description:"Info",source:"@site/docs/tools/python/ruff.md",sourceDirName:"tools/python",slug:"/tools/python/ruff",permalink:"/docs/tools/python/ruff",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Pylint",permalink:"/docs/tools/python/pylint"}},a={},d=[{value:"Info",id:"info",level:2},{value:"Links",id:"links",level:2},{value:"VSCode Extension for Ruff",id:"vscode-extension-for-ruff",level:2},{value:"Config file for ruff.toml",id:"config-file-for-rufftoml",level:2},{value:"VSCode Settings for pylint",id:"vscode-settings-for-pylint",level:2}];function c(n){const e={a:"a",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...n.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.h1,{id:"ruff",children:"Ruff"}),"\n",(0,i.jsx)(e.h2,{id:"info",children:"Info"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["Ruff is a superfast Python ",(0,i.jsx)(e.strong,{children:"linter + formatter"})]}),"\n",(0,i.jsx)(e.li,{children:"Ruff can help you with linting, formatting code as per configuration"}),"\n",(0,i.jsxs)(e.li,{children:["It also lets you sort imports as per ",(0,i.jsx)(e.code,{children:"isort"})," standard"]}),"\n"]}),"\n",(0,i.jsx)(e.h2,{id:"links",children:"Links"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:"https://docs.astral.sh/ruff/",children:"Ruff Homepage"})}),"\n"]}),"\n",(0,i.jsx)(e.h2,{id:"vscode-extension-for-ruff",children:"VSCode Extension for Ruff"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:"https://marketplace.visualstudio.com/items?itemName=charliermarsh.ruff",children:"Ruff VSCode Extension"})}),"\n"]}),"\n",(0,i.jsx)(e.h2,{id:"config-file-for-rufftoml",children:"Config file for ruff.toml"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["Create and use a file named ",(0,i.jsx)(e.code,{children:"ruff.toml"})," in your python project root folder"]}),"\n",(0,i.jsxs)(e.li,{children:["You can use the ",(0,i.jsx)(e.code,{children:"ruff.toml"})," file contents given below"]}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-yml",children:'# Exclude a variety of commonly ignored directories.\nexclude = [\n    ".bzr",\n    ".direnv",\n    ".eggs",\n    ".git",\n    ".git-rewrite",\n    ".hg",\n    ".ipynb_checkpoints",\n    ".mypy_cache",\n    ".nox",\n    ".pants.d",\n    ".pyenv",\n    ".pytest_cache",\n    ".pytype",\n    ".ruff_cache",\n    ".svn",\n    ".tox",\n    ".venv",\n    ".vscode",\n    "__pypackages__",\n    "_build",\n    "buck-out",\n    "build",\n    "dist",\n    "node_modules",\n    "site-packages",\n    "venv",\n]\n\n# Same as Black.\nline-length = 88\nindent-width = 4\n\n[lint]\n# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.\n# Unlike Flake8, Ruff doesn\'t enable pycodestyle warnings (`W`) or\n# McCabe complexity (`C901`) by default.\n# Enable flake8-bugbear (`B`) rules, in addition to the defaults.\nselect = ["E4", "E7", "E9", "F", "B"]\n\n# Avoid enforcing line-length violations (`E501`)\nignore = ["E501"]\n\n# Allow fix for all enabled rules (when `--fix`) is provided.\n# Avoid trying to fix flake8-bugbear (`B`) violations.\nfixable = ["ALL"]\nunfixable = ["B"]\n\n# Ignore `E402` (import violations) in all `__init__.py` files, and in select subdirectories.\n[lint.per-file-ignores]\n"__init__.py" = ["E402"]\n"**/{tests,docs,tools}/*" = ["E402"]\n\n[format]\n# Like Black, use double quotes for strings.\nquote-style = "double"\n\n# Like Black, indent with spaces, rather than tabs.\nindent-style = "space"\n\n# Like Black, respect magic trailing commas.\nskip-magic-trailing-comma = false\n\n# Enable auto-formatting of code examples in docstrings. Markdown,\n# reStructuredText code/literal blocks and doctests are all supported.\n#\n# This is currently disabled by default, but it is planned for this\n# to be opt-out in the future.\ndocstring-code-format = false\n\n# Set the line length limit used when formatting code snippets in\n# docstrings.\n#\n# This only has an effect when the `docstring-code-format` setting is\n# enabled.\ndocstring-code-line-length = "dynamic"\n'})}),"\n",(0,i.jsx)(e.h2,{id:"vscode-settings-for-pylint",children:"VSCode Settings for pylint"}),"\n",(0,i.jsx)(e.p,{children:"You can edit settings.json of VSCode as below"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"To set Ruff as default formatter for Python files"}),"\n",(0,i.jsx)(e.li,{children:"To auto format code file on Save"}),"\n",(0,i.jsx)(e.li,{children:"To auto organize imports on Save"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-json",children:'{\n   "[python]": {\n       "editor.defaultFormatter": "charliermarsh.ruff",\n       "editor.formatOnSave": true,\n       "editor.codeActionsOnSave": {\n           "source.organizeImports": "explicit"\n       },\n   },\n}\n'})})]})}function f(n={}){const{wrapper:e}={...(0,o.R)(),...n.components};return e?(0,i.jsx)(e,{...n,children:(0,i.jsx)(c,{...n})}):c(n)}},8453:(n,e,t)=>{t.d(e,{R:()=>r,x:()=>l});var i=t(6540);const o={},s=i.createContext(o);function r(n){const e=i.useContext(s);return i.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function l(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(o):n.components||o:r(n.components),i.createElement(s.Provider,{value:e},n.children)}}}]);